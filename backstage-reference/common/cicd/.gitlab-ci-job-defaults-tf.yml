default:
  image:
    name: node:18
  before_script:
    - cat /etc/os-release
    - apt-get update
    - apt install nodejs npm git python3-pip yq jq -y
    - export PIP_BREAK_SYSTEM_PACKAGES=1
    - pip3 install awscli --upgrade
    - yarn global add aws-cli typescript@latest
    - yarn --version
    - aws --version
    - apt-get install -y gnupg software-properties-common curl
    - wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
    - echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/hashicorp.list
    - apt-get update && apt-get install terraform
    - terraform -v
    # switch to pipeline role cred then Unset AWS_xxx env vars
    - PIPELINE_ROLE_ARN=`aws ssm get-parameter --name "/opa/pipeline-role" --region ${OPA_PLATFORM_REGION} | jq --raw-output '.Parameter' | jq -r .Value`
    - ROLE_OUTPUT=$(aws sts assume-role --role-arn "$PIPELINE_ROLE_ARN" --role-session-name "pipelineJob-$AWS_ACCOUNT_ID" --external-id "GitlabExternalIdentity" --duration-second=3600 --output json)
    - unset AWS_ACCESS_KEY_ID && unset AWS_SECRET_ACCESS_KEY && unset AWS_SESSION_TOKEN
    - export AWS_ACCESS_KEY_ID=$(echo ${ROLE_OUTPUT} | jq -r '.Credentials.AccessKeyId')
    - export AWS_SECRET_ACCESS_KEY=$(echo ${ROLE_OUTPUT} | jq -r '.Credentials.SecretAccessKey')
    - export AWS_SESSION_TOKEN=$(echo ${ROLE_OUTPUT} | jq -r '.Credentials.SessionToken')    
    - aws sts get-caller-identity
    # Storing gitlab access token before changing role
    - export ACCESS_TOKEN=`aws secretsmanager get-secret-value --secret-id opa-admin-gitlab-secrets --region ${OPA_PLATFORM_REGION} | jq --raw-output '.SecretString' | jq -r .apiToken`
    - git config --global user.email "fsi-pace-pe@amazon.com"
    - git config --global user.name "OPA CICD User"
    # Clone reference repo so that apps can utilize shared files. This allows us to have
    # a single point of change for reusable files, instead of having to change them in
    # every application repository.
    - git clone -b dev https://github.com/csna-projects/harmonix.git
    - mv $CI_PROJECT_DIR/harmonix/backstage-reference/common/cicd $CI_PROJECT_DIR/
    - rm -rf $CI_PROJECT_DIR/harmonix
    - echo "Shared files are available in $CI_PROJECT_DIR/cicd"
    - ls -la $CI_PROJECT_DIR/cicd/scripts
